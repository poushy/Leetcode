/**
 * Definition for singly-linked list.
 * function ListNode(val) {
 *     this.val = val;
 *     this.next = null;
 * }
 */
/**
 * @param {ListNode} l1
 * @param {ListNode} l2
 * @return {ListNode}
 */

var newList = null, currNode,remainder = 0;
var add = function(l1, l2) {
    if(l1 == null && l2 == null) {
        return;
    }
    
    var sum = 0;
    
    if(l1 == null) {
        sum = l2.val + remainder;
        
    }
    else if(l2 == null) {
        sum = l1.val + remainder;
    }
    else {
        sum = l1.val + l2.val + remainder;
    }
    
    var newNode = new ListNode(sum % 10);
    sum > 9 ? remainder = 1 : remainder = 0;
    
    if(newList == null) {
        newList = newNode;
        currNode = newNode;
    }
    else {
        currNode.next = newNode;
        currNode = newNode;
    }
    
    if(l1 != null && l2 != null) {
        add(l1.next, l2.next);
    }
    else if(l1 != null) {
        add(l1.next, l2);
    }
    else {
        add(l1, l2.next);
    }
    
    return;
}

var addTwoNumbers = function(l1, l2) {
    newList = null;
    currNode = null;
    remainder = 0;
    add(l1,l2);
    if(remainder == 1) {
        var newNode = new ListNode(1);
        if(newList == null) {
            newList = newNode;
        }
        else {
            currNode.next = newNode;
        }
    }
    return newList;

};
